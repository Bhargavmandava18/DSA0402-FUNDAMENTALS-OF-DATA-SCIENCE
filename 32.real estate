import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
data = {
    'HouseSize': [1000, 1500, 1200, 1800, 1350],
    'Price': [300000, 450000, 360000, 540000, 405000]
}
df = pd.DataFrame(data)
plt.scatter(df['HouseSize'], df['Price'])
plt.xlabel('House Size (sqft)')
plt.ylabel('Price ($)')
plt.title('House Price vs. House Size')
plt.show()
X = df[['HouseSize']]
y = df['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')
new_house_size = 1400
predicted_price = model.predict(np.array([[new_house_size]]))[0]
print(f'Predicted Price for a {new_house_size} sqft house: ${predicted_price:.2f}')
